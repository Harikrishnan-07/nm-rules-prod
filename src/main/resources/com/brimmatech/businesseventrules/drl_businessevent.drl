package com.brimmatech.businesseventrules;
import java.util.List;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.time.format.DateTimeFormatter;

function String getLoanDataForTheBusinessEvent(LoanData loanData)
{
      if(loanData != null && loanData.getLoanId() != null)
      {
        return "true";
      }
      return "false";
}

function String validateCreditOrderTrackingCreditReferenceNumber(LoanData loanData)
{
    String isValid = "true";
    if(loanData != null &&
    loanData.getCreditOrderTracking() != null &&
    loanData.getCreditOrderTracking().getFolderId() != null &&
    loanData.getCreditOrderTracking().getCreditReferenceNumbers() != null)
    {
        isValid = "false";
    }
    return isValid;
}

function String validateRptFeesheetFolderId(LoanData loanData) 
{
    String isValid = "true";
    if(loanData != null && loanData.getRptFeeSheet() != null && loanData.getRptFeeSheet().getFolderId() != null)
    {
        isValid = "false";
        
    }
    return isValid;
}

function String validateLoanToBeDisclosedInTwoDays(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 2) {

                        String loanIdentifier = loanDataList.get(i).getLoanIdentifier();

                        appendedString += loanIdentifier + " ,";
                    }
                }
            }
        }
        return appendedString;
    }

function String validateLoanToBeDisclosedInOneDay(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 1) {

                        String loanIdentifier = loanDataList.get(i).getLoanIdentifier();

                        appendedString += loanIdentifier + " ,";
                    }
                }
            }
        }
        return appendedString;
    }

function String validateLoanToBeDisclosedToday(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 0) {

                        String loanIdentifier = loanDataList.get(i).getLoanIdentifier();

                        appendedString += loanIdentifier + " ,";
                    }
                }
            }
        }
        return appendedString;
    }

function String validateLoansForTwoDaysFromApplicationDate(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 2) {

                        return "true";
                    }
                }
            }
        }
        return "false";
    }

function String validateLoansForOneDayFromApplicationDate(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 1) {

                        return "true";
                    }
                }
            }
        }
        return "false";
    }

function String validateLoansForToday(LoanDto loanDto)
{
	String applicationDateString = "";
        String appendedString = "";
        if (loanDto != null) {
            List<LoanData> loanDataList = loanDto.getLoanDataList();
            if (!loanDataList.isEmpty()) {
                for (int i = 0; i < loanDataList.size(); i++) {
                    applicationDateString = loanDataList.get(i).getApplicationDate();

                    DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                    LocalDate applicationDate = LocalDate.parse(applicationDateString, inputFormatter);
                    
                    String localDateString = LocalDate.now().format(inputFormatter);
                    LocalDate currentDate = LocalDate.parse(localDateString, inputFormatter);

                    if (applicationDate != null && ChronoUnit.DAYS.between(applicationDate, currentDate) == 0) {

                        return "true";
                    }
                }
            }
        }
        return "false";
    }
